"use strict";(self.webpackChunkdasarpemrogramanpython=self.webpackChunkdasarpemrogramanpython||[]).push([[7693],{3905:(e,a,n)=>{n.d(a,{Zo:()=>u,kt:()=>g});var t=n(7294);function i(e,a,n){return a in e?Object.defineProperty(e,a,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[a]=n,e}function r(e,a){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);a&&(t=t.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),n.push.apply(n,t)}return n}function l(e){for(var a=1;a<arguments.length;a++){var n=null!=arguments[a]?arguments[a]:{};a%2?r(Object(n),!0).forEach((function(a){i(e,a,n[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(n,a))}))}return e}function o(e,a){if(null==e)return{};var n,t,i=function(e,a){if(null==e)return{};var n,t,i={},r=Object.keys(e);for(t=0;t<r.length;t++)n=r[t],a.indexOf(n)>=0||(i[n]=e[n]);return i}(e,a);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(t=0;t<r.length;t++)n=r[t],a.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var p=t.createContext({}),s=function(e){var a=t.useContext(p),n=a;return e&&(n="function"==typeof e?e(a):l(l({},a),e)),n},u=function(e){var a=s(e.components);return t.createElement(p.Provider,{value:a},e.children)},d="mdxType",m={inlineCode:"code",wrapper:function(e){var a=e.children;return t.createElement(t.Fragment,{},a)}},k=t.forwardRef((function(e,a){var n=e.components,i=e.mdxType,r=e.originalType,p=e.parentName,u=o(e,["components","mdxType","originalType","parentName"]),d=s(n),k=i,g=d["".concat(p,".").concat(k)]||d[k]||m[k]||r;return n?t.createElement(g,l(l({ref:a},u),{},{components:n})):t.createElement(g,l({ref:a},u))}));function g(e,a){var n=arguments,i=a&&a.mdxType;if("string"==typeof e||i){var r=n.length,l=new Array(r);l[0]=k;var o={};for(var p in a)hasOwnProperty.call(a,p)&&(o[p]=a[p]);o.originalType=e,o[d]="string"==typeof e?e:i,l[1]=o;for(var s=2;s<r;s++)l[s]=n[s];return t.createElement.apply(null,l)}return t.createElement.apply(null,n)}k.displayName="MDXCreateElement"},760:(e,a,n)=>{n.r(a),n.d(a,{assets:()=>p,contentTitle:()=>l,default:()=>m,frontMatter:()=>r,metadata:()=>o,toc:()=>s});var t=n(7462),i=(n(7294),n(3905));const r={sidebar_position:58,title:"A.58. Python Iterable & Iterator",sidebar_label:"A.58. Iterable & Iterator"},l=void 0,o={unversionedId:"basic/iterable-iterator",id:"basic/iterable-iterator",title:"A.58. Python Iterable & Iterator",description:"Pada chapter ini kita akan belajar tentang konsep sekaligus penerapan iterable dan iterator di Python.",source:"@site/docs/basic/iterable-iterator.md",sourceDirName:"basic",slug:"/basic/iterable-iterator",permalink:"/basic/iterable-iterator",draft:!1,tags:[],version:"current",sidebarPosition:58,frontMatter:{sidebar_position:58,title:"A.58. Python Iterable & Iterator",sidebar_label:"A.58. Iterable & Iterator"},sidebar:"tutorialSidebar",previous:{title:"A.57. Eval & Exec",permalink:"/basic/eval-exec"},next:{title:"A.59. Generator & Yield",permalink:"/basic/generator-yield"}},p={},s=[{value:"A.58.1. Apa itu iterable?",id:"a581-apa-itu-iterable",level:2},{value:"A.58.2. Apa itu iterator?",id:"a582-apa-itu-iterator",level:2},{value:"A.58.3. Custom iterator",id:"a583-custom-iterator",level:2},{value:"Catatan chapter \ud83d\udcd1",id:"catatan-chapter-",level:2},{value:"\u25c9 Source code praktik",id:"-source-code-praktik",level:3},{value:"\u25c9 Chapter relevan lainnya",id:"-chapter-relevan-lainnya",level:3},{value:"\u25c9 Referensi",id:"-referensi",level:3}],u={toc:s},d="wrapper";function m(e){let{components:a,...n}=e;return(0,i.kt)(d,(0,t.Z)({},u,n,{components:a,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"Pada chapter ini kita akan belajar tentang konsep sekaligus penerapan iterable dan iterator di Python."),(0,i.kt)("h2",{id:"a581-apa-itu-iterable"},"A.58.1. Apa itu iterable?"),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Iteration")," atau iterasi adalah proses pengaksesan item-item suatu data kolektif sesuai urutannya satu-per-satu (menggunakan metode perulangan). Penerapan keyword ",(0,i.kt)("inlineCode",{parentName:"p"},"for in")," pada data string, list, atau data kolektif lainnya adalah contoh dari iterasi."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-python"},'condition = "weteng luwe"\nfor c in condition:\n    print(c)\n\nnumbers = [10, 12, 32, 44]\nfor n in numbers:\n    print(n)\n')),(0,i.kt)("p",null,"Di atas, variabel ",(0,i.kt)("inlineCode",{parentName:"p"},"condition")," di-iterasi menggunakan keyword ",(0,i.kt)("inlineCode",{parentName:"p"},"for in"),", variabel ",(0,i.kt)("inlineCode",{parentName:"p"},"c")," disetiap perulangan terisi dengan huruf string satu-per-satu, bergantian, mulai huruf pertama hingga terakhir."),(0,i.kt)("p",null,"Begitu juga dengan variabel ",(0,i.kt)("inlineCode",{parentName:"p"},"numbers"),", nilai numerik dalam list di-iterasi dengan setiap nilai ditampung variabel ",(0,i.kt)("inlineCode",{parentName:"p"},"n")," untuk kemudian di-print."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Iterable")," adalah object yang bisa di-iterasi, contohnya seperti tuple, list, string, dan tipe data kolektif lainnya. Sederhananya, setiap object yang bisa digunakan pada keyword ",(0,i.kt)("inlineCode",{parentName:"p"},"for in")," adalah pasti iterable."),(0,i.kt)("h2",{id:"a582-apa-itu-iterator"},"A.58.2. Apa itu iterator?"),(0,i.kt)("p",null,"Iterator berbeda dibanding iterable. Iterator adalah object iterable yang bisa mengingat ",(0,i.kt)("em",{parentName:"p"},"state")," perulangannya. Jadi object tersebut tau informasi seperti perulangan sedang berada di indeks ke berapa, elemen berikutnya apa, dan info mengenai kapan perulangan berhenti."),(0,i.kt)("p",null,"Object iterable bisa dikonversi menjadi iterator, caranya dengan membungkusnya menggunakan fungsi ",(0,i.kt)("inlineCode",{parentName:"p"},"iter()"),". Contoh:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-python"},'condition = "weteng luwe"\nfor c in iter(condition):\n    print(c)\n\nnumbers = [10, 12, 32, 44]\nfor n in iter(numbers):\n    print(n)\n')),(0,i.kt)("p",null,"Ok, lalu apa benefitnya? apa bedanya dengan iterable biasa? Jika mengacu ke contoh di atas, tidak akan terlihat perbedaannya dimana, karena object iterable dan iterator keduanya pasti bisa digunakan pada perulangan menggunakan keyword ",(0,i.kt)("inlineCode",{parentName:"p"},"for in"),"."),(0,i.kt)("p",null,"Agar lebih jelas, kita berkenalan dulu dengan fungsi baru bernama ",(0,i.kt)("inlineCode",{parentName:"p"},"next()"),". Fungsi ini berguna untuk mengembalikan data iterasi berikutnya. Contoh penerapannya silakan lihat kode berikut ini:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-python"},"numbers = [10, 12, 32, 44]\nnumbers_iter = iter(numbers)\n\nn = next(numbers_iter)\nprint(n) # output \u279c 10\n\nn = next(numbers_iter)\nprint(n) # output \u279c 12\n\nn = next(numbers_iter)\nprint(n) # output \u279c 32\n\nn = next(numbers_iter)\nprint(n) # output \u279c 44\n")),(0,i.kt)("p",null,"Data list ",(0,i.kt)("inlineCode",{parentName:"p"},"numbers")," dikonversi ke bentuk iterator menggunakan fungsi ",(0,i.kt)("inlineCode",{parentName:"p"},"iter()"),", kemudian digunakan sebagai argument pemanggilan fungsi ",(0,i.kt)("inlineCode",{parentName:"p"},"next()")," 4 kali, hasilnya:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Pemanggilan ke-1 mengembalikan item index ke-0, yaitu angka ",(0,i.kt)("inlineCode",{parentName:"li"},"10")),(0,i.kt)("li",{parentName:"ul"},"Pemanggilan ke-2 mengembalikan item index ke-1, yaitu angka ",(0,i.kt)("inlineCode",{parentName:"li"},"12")),(0,i.kt)("li",{parentName:"ul"},"Pemanggilan ke-3 mengembalikan item index ke-2, yaitu angka ",(0,i.kt)("inlineCode",{parentName:"li"},"32")),(0,i.kt)("li",{parentName:"ul"},"Pemanggilan ke-4 mengembalikan item index ke-3, yaitu angka ",(0,i.kt)("inlineCode",{parentName:"li"},"44"))),(0,i.kt)("p",null,"Dari sini terlihat bahwa object iterator benar-benar mengingat informasi state-nya. Setelah pemanggilan fungsi ",(0,i.kt)("inlineCode",{parentName:"p"},"next()")," pertama, object ",(0,i.kt)("inlineCode",{parentName:"p"},"numbers_iter")," tau bahwa item indeks ke-1 sudah diakses, dan pengaksesan berikutnya adalah indeks ke-2, dan seterusnya."),(0,i.kt)("blockquote",null,(0,i.kt)("p",{parentName:"blockquote"},"Penggunaan fungsi ",(0,i.kt)("inlineCode",{parentName:"p"},"next()")," terhadap object iterator yang sudah terakses semua itemnya menghasilkan error. Manfaatkan keyword ",(0,i.kt)("inlineCode",{parentName:"p"},"try except")," jika diperlukan.")),(0,i.kt)("h2",{id:"a583-custom-iterator"},"A.58.3. Custom iterator"),(0,i.kt)("p",null,"Selain menggunakan fungsi ",(0,i.kt)("inlineCode",{parentName:"p"},"iter()")," pembuatan iterator juga bisa dilakukan via custom class. Caranya dengan mendesain custom class agar memiliki 2 hal berikut:"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},"Custom class harus ",(0,i.kt)("em",{parentName:"li"},"inherit")," class ",(0,i.kt)("inlineCode",{parentName:"li"},"Iterator")," milik module ",(0,i.kt)("inlineCode",{parentName:"li"},"collections.abc"),"."),(0,i.kt)("li",{parentName:"ol"},"Di dalam class harus ada fungsi ",(0,i.kt)("inlineCode",{parentName:"li"},"__next__(self)")," yang otomatis dipanggil setiap kali object digunakan pada fungsi ",(0,i.kt)("inlineCode",{parentName:"li"},"next()"),".")),(0,i.kt)("p",null,"Pada contoh berikut, disiapkan class bernama ",(0,i.kt)("inlineCode",{parentName:"p"},"LoopReverse")," dengan tugas adalah menghasilkan object iterator yang mengembalikan item data kolektif berurutan dari belakang (terbalik)."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-python"},"from collections.abc import Iterator\n\nclass LoopReverse(Iterator):\n\n    def __init__(self, data):\n        self.data = data\n        self.i = 0\n\n    def __next__(self):\n        if (self.i+1) > len(self.data):\n            raise StopIteration\n        else:\n            r = self.data[len(self.data)-self.i-1]\n            self.i = self.i + 1\n            return r\n\nnumbers = [23, 2, 1, 54]\nfor n in LoopReverse(numbers):\n    print(n)\n\n# output \u2193\n#\n# 54\n# 1\n# 2\n# 23\n")),(0,i.kt)("p",null,"Penjelasan:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Sewaktu class dinisialisasi, instance attribute ",(0,i.kt)("inlineCode",{parentName:"li"},"i")," disiapkan dengan nilai ",(0,i.kt)("inlineCode",{parentName:"li"},"0")," dan attribute ",(0,i.kt)("inlineCode",{parentName:"li"},"data")," berisi data yang disisipkan via argument (pada konteks ini yang dimaksud adalah data ",(0,i.kt)("inlineCode",{parentName:"li"},"[23, 2, 1, 54]"),")."),(0,i.kt)("li",{parentName:"ul"},"Di setiap perulangan, fungsi ",(0,i.kt)("inlineCode",{parentName:"li"},"__next__(self)")," dipanggil, ketika nilai ",(0,i.kt)("inlineCode",{parentName:"li"},"i")," masih di bawah jumlah item ",(0,i.kt)("inlineCode",{parentName:"li"},"data"),", maka item nomor ",(0,i.kt)("inlineCode",{parentName:"li"},"i")," dari belakang dikembalikan. Selebihnya, exception ",(0,i.kt)("inlineCode",{parentName:"li"},"StopIteration")," di-raise untuk menandai bahwa iterasi sudah dihentikan.")),(0,i.kt)("p",null,"Coba test juga pengaksesan item iterator via fungsi ",(0,i.kt)("inlineCode",{parentName:"p"},"next()"),". Contoh:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-python"},"numbers = [23, 2, 1, 54]\nnumbers_iter = LoopReverse(numbers)\n\nn = next(numbers_iter)\nprint(n) # output \u279c 54\n\nn = next(numbers_iter)\nprint(n) # output \u279c 1\n\nn = next(numbers_iter)\nprint(n) # output \u279c 2\n\nn = next(numbers_iter)\nprint(n) # output \u279c 23\n")),(0,i.kt)("p",null,"Selain menggunakan class ",(0,i.kt)("inlineCode",{parentName:"p"},"Iterator")," sebagai superclass, iterator custom class juga bisa dibuat dengan cukup menambahkan fungsi ",(0,i.kt)("inlineCode",{parentName:"p"},"__iter__(self)")," yang mengembalikan data ",(0,i.kt)("inlineCode",{parentName:"p"},"self")," tanpa perlu meng-inherit class ",(0,i.kt)("inlineCode",{parentName:"p"},"Iterator"),". Contoh:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-python"},"class LoopReverse:\n\n    def __init__(self, data):\n        self.data = data\n        self.i = 0\n\n    def __iter__(self):\n        return self\n\n    def __next__(self):\n        if (self.i+1) > len(self.data):\n            raise StopIteration\n        else:\n            r = self.data[len(self.data)-self.i-1]\n            self.i = self.i + 1\n            return r\n\nnumbers = [23, 2, 1, 54]\nfor n in LoopReverse(numbers):\n    print(n)\n\n# output \u2193\n#\n# 54\n# 1\n# 2\n# 23\n")),(0,i.kt)("p",null,"Method ",(0,i.kt)("inlineCode",{parentName:"p"},"__iter__(self)")," harus mengembalikan object iterator yang dimana harus memiliki method ",(0,i.kt)("inlineCode",{parentName:"p"},"__next__(self)"),". Pada contoh di atas, method ",(0,i.kt)("inlineCode",{parentName:"p"},"__next__(self)")," kebetulan memang posisinya satu level dengan method ",(0,i.kt)("inlineCode",{parentName:"p"},"__iter__(self)"),", oleh karena itu object ",(0,i.kt)("inlineCode",{parentName:"p"},"self")," dijadikan nilai balik."),(0,i.kt)("hr",null),(0,i.kt)("div",{class:"section-footnote"},(0,i.kt)("h2",{id:"catatan-chapter-"},"Catatan chapter \ud83d\udcd1"),(0,i.kt)("h3",{id:"-source-code-praktik"},"\u25c9 Source code praktik"),(0,i.kt)("pre",null,(0,i.kt)("a",{href:"https://github.com/novalagung/dasarpemrogramanpython-example/tree/master/iterable-iterator"},"github.com/novalagung/dasarpemrogramanpython-example/../iterable-iterator")),(0,i.kt)("h3",{id:"-chapter-relevan-lainnya"},"\u25c9 Chapter relevan lainnya"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/basic/for-range"},"Perulangan \u279c for & range"))),(0,i.kt)("h3",{id:"-referensi"},"\u25c9 Referensi"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://docs.python.org/3/glossary.html#term-iterator"},"https://docs.python.org/3/glossary.html#term-iterator")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://docs.python.org/3/library/functions.html#iter"},"https://docs.python.org/3/library/functions.html#iter")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://docs.python.org/3/library/functions.html#next"},"https://docs.python.org/3/library/functions.html#next")))))}m.isMDXComponent=!0}}]);