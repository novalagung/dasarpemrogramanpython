"use strict";(self.webpackChunkdasarpemrogramanpython=self.webpackChunkdasarpemrogramanpython||[]).push([[312],{3905:(e,a,n)=>{n.d(a,{Zo:()=>d,kt:()=>m});var t=n(7294);function i(e,a,n){return a in e?Object.defineProperty(e,a,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[a]=n,e}function r(e,a){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);a&&(t=t.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),n.push.apply(n,t)}return n}function o(e){for(var a=1;a<arguments.length;a++){var n=null!=arguments[a]?arguments[a]:{};a%2?r(Object(n),!0).forEach((function(a){i(e,a,n[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(n,a))}))}return e}function p(e,a){if(null==e)return{};var n,t,i=function(e,a){if(null==e)return{};var n,t,i={},r=Object.keys(e);for(t=0;t<r.length;t++)n=r[t],a.indexOf(n)>=0||(i[n]=e[n]);return i}(e,a);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(t=0;t<r.length;t++)n=r[t],a.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var l=t.createContext({}),s=function(e){var a=t.useContext(l),n=a;return e&&(n="function"==typeof e?e(a):o(o({},a),e)),n},d=function(e){var a=s(e.components);return t.createElement(l.Provider,{value:a},e.children)},k="mdxType",u={inlineCode:"code",wrapper:function(e){var a=e.children;return t.createElement(t.Fragment,{},a)}},c=t.forwardRef((function(e,a){var n=e.components,i=e.mdxType,r=e.originalType,l=e.parentName,d=p(e,["components","mdxType","originalType","parentName"]),k=s(n),c=i,m=k["".concat(l,".").concat(c)]||k[c]||u[c]||r;return n?t.createElement(m,o(o({ref:a},d),{},{components:n})):t.createElement(m,o({ref:a},d))}));function m(e,a){var n=arguments,i=a&&a.mdxType;if("string"==typeof e||i){var r=n.length,o=new Array(r);o[0]=c;var p={};for(var l in a)hasOwnProperty.call(a,l)&&(p[l]=a[l]);p.originalType=e,p[k]="string"==typeof e?e:i,o[1]=p;for(var s=2;s<r;s++)o[s]=n[s];return t.createElement.apply(null,o)}return t.createElement.apply(null,n)}c.displayName="MDXCreateElement"},3065:(e,a,n)=>{n.r(a),n.d(a,{assets:()=>l,contentTitle:()=>o,default:()=>u,frontMatter:()=>r,metadata:()=>p,toc:()=>s});var t=n(7462),i=(n(7294),n(3905));const r={sidebar_position:31,title:"A.31. Python None",sidebar_label:"A.31. None"},o=void 0,p={unversionedId:"basic/none",id:"basic/none",title:"A.31. Python None",description:"Pada chapter ini kita akan belajar tentang object special bernama None.",source:"@site/docs/basic/none.md",sourceDirName:"basic",slug:"/basic/none",permalink:"/basic/none",draft:!1,tags:[],version:"current",sidebarPosition:31,frontMatter:{sidebar_position:31,title:"A.31. Python None",sidebar_label:"A.31. None"},sidebar:"tutorialSidebar",previous:{title:"A.30. Special Names",permalink:"/basic/special-names"},next:{title:"A.32. Pack Unpack \u279c Tuple, List, Set, Dict",permalink:"/basic/pack-unpack-elements"}},l={},s=[{value:"A.31.1. Pengenalan <code>None</code>",id:"a311-pengenalan-none",level:2},{value:"A.31.2. Penggunaan operator <code>is</code> terhadap <code>None</code>",id:"a312-penggunaan-operator-is-terhadap-none",level:2},{value:"Catatan chapter \ud83d\udcd1",id:"catatan-chapter-",level:2},{value:"\u25c9 Source code praktik",id:"-source-code-praktik",level:3},{value:"\u25c9 Chapter relevan lainnya",id:"-chapter-relevan-lainnya",level:3},{value:"\u25c9 Referensi",id:"-referensi",level:3}],d={toc:s},k="wrapper";function u(e){let{components:a,...n}=e;return(0,i.kt)(k,(0,t.Z)({},d,n,{components:a,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"Pada chapter ini kita akan belajar tentang object special bernama ",(0,i.kt)("inlineCode",{parentName:"p"},"None"),"."),(0,i.kt)("h2",{id:"a311-pengenalan-none"},"A.31.1. Pengenalan ",(0,i.kt)("inlineCode",{parentName:"h2"},"None")),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"None")," merupakan object bawaan Python yang umumnya digunakan untuk merepresentasikan nilai kosong atau ",(0,i.kt)("em",{parentName:"p"},"null"),"."),(0,i.kt)("p",null,"Ketika suatu variabel berisi data yang nilainya bisa kosong, umumnya sebelum variabel tersebut digunakan, dilakukan pengecekan terlebih dahulu menggunakan seleksi kondisi untuk memastikan apakah nilainya benar-benar kosong atau tidak."),(0,i.kt)("p",null,"Sebagai contoh, pada kode berikut, dipersiapkan sebuah fungsi bernama ",(0,i.kt)("inlineCode",{parentName:"p"},"inspect_data()"),", tugasnya mengecek apakah variabel memiliki nilai atau tidak."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-python"},'def inspect_data(data):\n    if data is None:\n        print("data is empty. like very empty")\n    else:\n        print(f"data: {data}, type: {type(data).__name__}")\n\ndata = 0\ninspect_data(data)\n# output \u279c data: 0, type: int\n\ndata = ""\ninspect_data(data)\n# output \u279c data: , type: str\n\ndata = None\ninspect_data(data)\n# output \u279c data is empty. like very empty\n\nclass Car:\n    def __init__(self):\n        self.name = ""\n\ndata = Car()\ninspect_data(data)\n# output \u279c data: <__main__.Car object at 0x000001E6B38F60F0>, type: Car\n')),(0,i.kt)("p",null,"Bisa dilihat pada program di atas output tiap statement adalah berbeda-beda sesuai tipe datanya."),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Ketika variabel ",(0,i.kt)("inlineCode",{parentName:"p"},"data")," berisi ",(0,i.kt)("inlineCode",{parentName:"p"},"0")," maka variabel tersebut tidak benar-benar kosong, melainkan berisi angka ",(0,i.kt)("inlineCode",{parentName:"p"},"0"),".")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Karakteristik yang sama juga berlaku ketika variabel berisi string kosong ",(0,i.kt)("inlineCode",{parentName:"p"},'""'),", meskipun ketika di-print tidak muncul apa-apa, variabel tersebut sebenarnya berisi tipe data string namun tanpa isi (string dengan panjang nol). Maka variabel tersebut sebenarnya tidak benar-benar kosong.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Barulah ketika variabel isinya data ",(0,i.kt)("inlineCode",{parentName:"p"},"None")," maka dianggap benar-benar kosong."))),(0,i.kt)("blockquote",null,(0,i.kt)("p",{parentName:"blockquote"},"Kode di atas berisi penerapan salah satu special name, yaitu attribute ",(0,i.kt)("inlineCode",{parentName:"p"},"__name__")," milik class ",(0,i.kt)("inlineCode",{parentName:"p"},"type"),"."),(0,i.kt)("p",{parentName:"blockquote"},"Pembahasan detail mengenai special name ada di chapter ",(0,i.kt)("a",{parentName:"p",href:"/basic/special-names#a294-attribute-__name__-milik-class-type"},"Special Names \u279c Attribute ",(0,i.kt)("strong",{parentName:"a"},"name")," milik class type"))),(0,i.kt)("h2",{id:"a312-penggunaan-operator-is-terhadap-none"},"A.31.2. Penggunaan operator ",(0,i.kt)("inlineCode",{parentName:"h2"},"is")," terhadap ",(0,i.kt)("inlineCode",{parentName:"h2"},"None")),(0,i.kt)("p",null,"Ketika memeriksa apakah sebuah objek bernilai ",(0,i.kt)("inlineCode",{parentName:"p"},"None")," atau tidak, disarankan untuk menggunakan operator ",(0,i.kt)("inlineCode",{parentName:"p"},"is")," dibanding ",(0,i.kt)("inlineCode",{parentName:"p"},"=="),", karena sifat dari operator ",(0,i.kt)("inlineCode",{parentName:"p"},"==")," memanggil special method ",(0,i.kt)("inlineCode",{parentName:"p"},"__eq__()")," dari objek yang diperiksa dan pada praktiknya tidak semua class menggunakan implementasi default method ",(0,i.kt)("inlineCode",{parentName:"p"},"__eq__()"),". Dari sini maka potensi penggunaan operator ",(0,i.kt)("inlineCode",{parentName:"p"},"==")," menghasilkan nilai yg berbeda dibanding yang diharapkan adalah ada (meskipun sangat kecil)."),(0,i.kt)("p",null,"Serta, operator ",(0,i.kt)("inlineCode",{parentName:"p"},"is")," lebih cepat dibanding ",(0,i.kt)("inlineCode",{parentName:"p"},"==")," untuk pengecekan data ",(0,i.kt)("inlineCode",{parentName:"p"},"None"),"."),(0,i.kt)("hr",null),(0,i.kt)("div",{class:"section-footnote"},(0,i.kt)("h2",{id:"catatan-chapter-"},"Catatan chapter \ud83d\udcd1"),(0,i.kt)("h3",{id:"-source-code-praktik"},"\u25c9 Source code praktik"),(0,i.kt)("pre",null,(0,i.kt)("a",{href:"https://github.com/novalagung/dasarpemrogramanpython-example/tree/master/none"},"github.com/novalagung/dasarpemrogramanpython-example/../none")),(0,i.kt)("h3",{id:"-chapter-relevan-lainnya"},"\u25c9 Chapter relevan lainnya"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/basic/tipe-data"},"Tipe Data")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/basic/special-names"},"Special Names"))),(0,i.kt)("h3",{id:"-referensi"},"\u25c9 Referensi"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://docs.python.org/3/c-api/none.html"},"https://docs.python.org/3/c-api/none.html")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://stackoverflow.com/questions/3257919/what-is-the-difference-between-is-none-and-none"},"https://stackoverflow.com/questions/3257919/what-is-the-difference-between-is-none-and-none")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://stackoverflow.com/questions/26595/is-there-any-difference-between-foo-is-none-and-foo-none/26611#26611"},"https://stackoverflow.com/questions/26595/is-there-any-difference-between-foo-is-none-and-foo-none/26611#26611")))))}u.isMDXComponent=!0}}]);