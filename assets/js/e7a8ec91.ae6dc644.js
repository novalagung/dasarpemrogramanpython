"use strict";(self.webpackChunkdasarpemrogramanpython=self.webpackChunkdasarpemrogramanpython||[]).push([[5373],{3905:(e,n,a)=>{a.d(n,{Zo:()=>u,kt:()=>k});var t=a(7294);function r(e,n,a){return n in e?Object.defineProperty(e,n,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[n]=a,e}function i(e,n){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);n&&(t=t.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),a.push.apply(a,t)}return a}function o(e){for(var n=1;n<arguments.length;n++){var a=null!=arguments[n]?arguments[n]:{};n%2?i(Object(a),!0).forEach((function(n){r(e,n,a[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):i(Object(a)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(a,n))}))}return e}function l(e,n){if(null==e)return{};var a,t,r=function(e,n){if(null==e)return{};var a,t,r={},i=Object.keys(e);for(t=0;t<i.length;t++)a=i[t],n.indexOf(a)>=0||(r[a]=e[a]);return r}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(t=0;t<i.length;t++)a=i[t],n.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var p=t.createContext({}),s=function(e){var n=t.useContext(p),a=n;return e&&(a="function"==typeof e?e(n):o(o({},n),e)),a},u=function(e){var n=s(e.components);return t.createElement(p.Provider,{value:n},e.children)},m="mdxType",d={inlineCode:"code",wrapper:function(e){var n=e.children;return t.createElement(t.Fragment,{},n)}},c=t.forwardRef((function(e,n){var a=e.components,r=e.mdxType,i=e.originalType,p=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),m=s(a),c=r,k=m["".concat(p,".").concat(c)]||m[c]||d[c]||i;return a?t.createElement(k,o(o({ref:n},u),{},{components:a})):t.createElement(k,o({ref:n},u))}));function k(e,n){var a=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var i=a.length,o=new Array(i);o[0]=c;var l={};for(var p in n)hasOwnProperty.call(n,p)&&(l[p]=n[p]);l.originalType=e,l[m]="string"==typeof e?e:r,o[1]=l;for(var s=2;s<i;s++)o[s]=a[s];return t.createElement.apply(null,o)}return t.createElement.apply(null,a)}c.displayName="MDXCreateElement"},364:(e,n,a)=>{a.r(n),a.d(n,{assets:()=>p,contentTitle:()=>o,default:()=>d,frontMatter:()=>i,metadata:()=>l,toc:()=>s});var t=a(7462),r=(a(7294),a(3905));const i={sidebar_position:59,title:"A.59. Python Generator & Yield",sidebar_label:"A.59. Generator & Yield"},o=void 0,l={unversionedId:"basic/generator-yield",id:"basic/generator-yield",title:"A.59. Python Generator & Yield",description:"Pada chapter ini kita akan belajar tentang konsep generator serta pengaplikasiannya menggunakan keyword yield dan generator expression.",source:"@site/docs/basic/generator-yield.md",sourceDirName:"basic",slug:"/basic/generator-yield",permalink:"/basic/generator-yield",draft:!1,tags:[],version:"current",sidebarPosition:59,frontMatter:{sidebar_position:59,title:"A.59. Python Generator & Yield",sidebar_label:"A.59. Generator & Yield"},sidebar:"tutorialSidebar",previous:{title:"A.58. Iterable & Iterator",permalink:"/basic/iterable-iterator"}},p={},s=[{value:"A.59.1. Generator object",id:"a591-generator-object",level:2},{value:"A.59.2. Generator function",id:"a592-generator-function",level:2},{value:"\u25c9 Infinite counter",id:"-infinite-counter",level:3},{value:"\u25c9 Operasi baca file",id:"-operasi-baca-file",level:3},{value:"A.59.3. Generator expression",id:"a593-generator-expression",level:2},{value:"Catatan chapter \ud83d\udcd1",id:"catatan-chapter-",level:2},{value:"\u25c9 Source code praktik",id:"-source-code-praktik",level:3},{value:"\u25c9 Chapter relevan lainnya",id:"-chapter-relevan-lainnya",level:3},{value:"\u25c9 Referensi",id:"-referensi",level:3}],u={toc:s},m="wrapper";function d(e){let{components:n,...a}=e;return(0,r.kt)(m,(0,t.Z)({},u,a,{components:n,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"Pada chapter ini kita akan belajar tentang konsep generator serta pengaplikasiannya menggunakan keyword ",(0,r.kt)("inlineCode",{parentName:"p"},"yield")," dan ",(0,r.kt)("em",{parentName:"p"},"generator expression"),"."),(0,r.kt)("h2",{id:"a591-generator-object"},"A.59.1. Generator object"),(0,r.kt)("p",null,"Generator object adalah object iterator yang dibuat via fungsi generator (menggunakan keyword ",(0,r.kt)("inlineCode",{parentName:"p"},"yield"),") atau via ",(0,r.kt)("em",{parentName:"p"},"generator expression"),"."),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"Mengenai apa itu iterator, pembahasannya ada di chapter sebelumnya, yaitu ",(0,r.kt)("a",{parentName:"p",href:"/basic/iterable-iterator"},"Iterable & Iterator"))),(0,r.kt)("h2",{id:"a592-generator-function"},"A.59.2. Generator function"),(0,r.kt)("p",null,"Generator function adalah salah satu cara pembuatan generator object. Ciri khasnya di dalam fungsi ada statement berisi keyword ",(0,r.kt)("inlineCode",{parentName:"p"},"yield"),"."),(0,r.kt)("p",null,"Mari praktekan. Di bawah ini, fungsi ",(0,r.kt)("inlineCode",{parentName:"p"},"random_messages()")," didesain untuk mengembalikan generator object."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},'def random_messages():\n    yield "hello python"\n    yield "how are you"\n    yield "nice to meet you"\n\nmessages = random_messages()\nprint(messages)\n# <generator object random_messages at 0x00000...>\n')),(0,r.kt)("p",null,"Variabel ",(0,r.kt)("inlineCode",{parentName:"p"},"messages")," menampung nilai balik pemanggilan fungsi ",(0,r.kt)("inlineCode",{parentName:"p"},"random_messages()")," (data generator object), ketika di-print nilainya yang muncul adalah ",(0,r.kt)("em",{parentName:"p"},"generator object"),"."),(0,r.kt)("p",null,"Selayaknya iterator, generator (yang juga merupakan iterator) pengaksesan itemnya dilakukan via perulangan ",(0,r.kt)("inlineCode",{parentName:"p"},"for in"),", atau menggunakan fungsi ",(0,r.kt)("inlineCode",{parentName:"p"},"next()"),"."),(0,r.kt)("p",null,"Pada contoh berikutnya ini, generator ",(0,r.kt)("inlineCode",{parentName:"p"},"random_messages()")," digunakan pada perulangan. Hasilnya, di setiap iterasi ",(0,r.kt)("inlineCode",{parentName:"p"},"for in"),", data yang dikembalikan via keyword ",(0,r.kt)("inlineCode",{parentName:"p"},"yield")," di-print."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},'def random_messages():\n    yield "hello python"\n    yield "how are you"\n    yield "nice to meet you"\n\nfor message in random_messages():\n    print(message)\n# output \u2193\n#\n# hello python\n# how are you\n# nice to meet you\n')),(0,r.kt)("p",null,"Karena ada 3 statement ",(0,r.kt)("inlineCode",{parentName:"p"},"yield")," disitu, maka generator ketika digunakan di perulangan hasilnya iterasi sebanyak 3x."),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Iterasi ke-1, variabel ",(0,r.kt)("inlineCode",{parentName:"li"},"message")," berisi statement yield ke-1, yaitu ",(0,r.kt)("inlineCode",{parentName:"li"},"hello python")),(0,r.kt)("li",{parentName:"ul"},"Iterasi ke-2, variabel ",(0,r.kt)("inlineCode",{parentName:"li"},"message")," berisi statement yield ke-2, yaitu ",(0,r.kt)("inlineCode",{parentName:"li"},"how are you")),(0,r.kt)("li",{parentName:"ul"},"Iterasi ke-3, variabel ",(0,r.kt)("inlineCode",{parentName:"li"},"message")," berisi statement yield ke-3, yaitu ",(0,r.kt)("inlineCode",{parentName:"li"},"nice to meet you"))),(0,r.kt)("p",null,"Contoh implementasi penerapan generator via fungsi ",(0,r.kt)("inlineCode",{parentName:"p"},"next()"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},'gen = random_messages()\n\nmessage = next(gen)\nprint(f"message 1: {message}")\n# output \u279c message 1: hello python\n\nmessage = next(gen)\nprint(f"message 2: {message}")\n# output \u279c message 2: how are you\n\nmessage = next(gen)\nprint(f"message 3: {message}")\n# output \u279c message 3: nice to meet you\n')),(0,r.kt)("p",null,"Berikut adalah 2 contoh tambahan penerapan fungsi generator dan keyword ",(0,r.kt)("inlineCode",{parentName:"p"},"yield"),"."),(0,r.kt)("h3",{id:"-infinite-counter"},"\u25c9 Infinite counter"),(0,r.kt)("p",null,"Keyword ",(0,r.kt)("inlineCode",{parentName:"p"},"yield")," bisa dikombinasikan dengan perulangan ",(0,r.kt)("inlineCode",{parentName:"p"},"while")," untuk membuat logic ",(0,r.kt)("em",{parentName:"p"},"infinite counter"),"."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"def infinite_counter():\n    i = 0\n    while True:\n        yield i\n        i = i + 1\n\nc = infinite_counter()\nprint(next(c))\n# output \u279c 0\n\nprint(next(c))\n# output \u279c 1\n\nprint(next(c))\n# output \u279c 2\n\n# ...\n")),(0,r.kt)("h3",{id:"-operasi-baca-file"},"\u25c9 Operasi baca file"),(0,r.kt)("p",null,"Contoh operasi baca file yang setiap baris konten file dikembalikan sebagai data iterasi via keyword ",(0,r.kt)("inlineCode",{parentName:"p"},"yield"),"."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"def file_reader(file_name):\n    for row in open(file_name, \"r\"):\n        yield row\n\nfor row in open('content.txt'):\n    print(row.strip())\n")),(0,r.kt)("h2",{id:"a593-generator-expression"},"A.59.3. Generator expression"),(0,r.kt)("p",null,"Generator comprehension (atau yang umumnya dikenal sebagai generator expression) adalah ekspresi statement yang ditulis dalam format tertentu yang otomatis terdeteksi sebagai ",(0,r.kt)("em",{parentName:"p"},"generator object"),"."),(0,r.kt)("p",null,"Penulisan ekspresi generator mirip seperti penulisan ",(0,r.kt)("em",{parentName:"p"},"list comprehension"),", perbedaannya ada pada karakter yang digunakan untuk membungkus ekspresi. Pada list comprehension menggunakan tanda ",(0,r.kt)("inlineCode",{parentName:"p"},"[ ]"),", pada generator comprehension/expression menggunakan tanda ",(0,r.kt)("inlineCode",{parentName:"p"},"( )"),"."),(0,r.kt)("p",null,"Contoh penerapan:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"exp1 = [num**2 for num in range(5)]\nprint(exp1)\n# output \u279c [0, 1, 4, 9, 16]\n\nexp2 = (num**2 for num in range(5))\nprint(exp2)\n# output \u279c <generator object <genexpr> at 0x00000...>\n\nfor d in exp2:\n    print(d)\n# output \u2193\n#\n# 0\n# 1\n# 4\n# 9\n# 16\n")),(0,r.kt)("hr",null),(0,r.kt)("div",{class:"section-footnote"},(0,r.kt)("h2",{id:"catatan-chapter-"},"Catatan chapter \ud83d\udcd1"),(0,r.kt)("h3",{id:"-source-code-praktik"},"\u25c9 Source code praktik"),(0,r.kt)("pre",null,(0,r.kt)("a",{href:"https://github.com/novalagung/dasarpemrogramanpython-example/tree/master/generator-yield"},"github.com/novalagung/dasarpemrogramanpython-example/../generator-yield")),(0,r.kt)("h3",{id:"-chapter-relevan-lainnya"},"\u25c9 Chapter relevan lainnya"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/basic/list-comprehension"},"List Comprehension")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/basic/iterable-iterator"},"Iterable & Iterator"))),(0,r.kt)("h3",{id:"-referensi"},"\u25c9 Referensi"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://docs.python.org/3/reference/expressions.html#generator-expressions"},"https://docs.python.org/3/reference/expressions.html#generator-expressions")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://docs.python.org/3/reference/expressions.html#yield-expressions"},"https://docs.python.org/3/reference/expressions.html#yield-expressions")))))}d.isMDXComponent=!0}}]);