"use strict";(self.webpackChunkdasarpemrogramanpython=self.webpackChunkdasarpemrogramanpython||[]).push([[8308],{3905:(n,e,a)=>{a.d(e,{Zo:()=>m,kt:()=>c});var t=a(7294);function i(n,e,a){return e in n?Object.defineProperty(n,e,{value:a,enumerable:!0,configurable:!0,writable:!0}):n[e]=a,n}function r(n,e){var a=Object.keys(n);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(n);e&&(t=t.filter((function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable}))),a.push.apply(a,t)}return a}function l(n){for(var e=1;e<arguments.length;e++){var a=null!=arguments[e]?arguments[e]:{};e%2?r(Object(a),!0).forEach((function(e){i(n,e,a[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(n,Object.getOwnPropertyDescriptors(a)):r(Object(a)).forEach((function(e){Object.defineProperty(n,e,Object.getOwnPropertyDescriptor(a,e))}))}return n}function u(n,e){if(null==n)return{};var a,t,i=function(n,e){if(null==n)return{};var a,t,i={},r=Object.keys(n);for(t=0;t<r.length;t++)a=r[t],e.indexOf(a)>=0||(i[a]=n[a]);return i}(n,e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(n);for(t=0;t<r.length;t++)a=r[t],e.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(n,a)&&(i[a]=n[a])}return i}var o=t.createContext({}),p=function(n){var e=t.useContext(o),a=e;return n&&(a="function"==typeof n?n(e):l(l({},e),n)),a},m=function(n){var e=p(n.components);return t.createElement(o.Provider,{value:e},n.children)},s="mdxType",k={inlineCode:"code",wrapper:function(n){var e=n.children;return t.createElement(t.Fragment,{},e)}},d=t.forwardRef((function(n,e){var a=n.components,i=n.mdxType,r=n.originalType,o=n.parentName,m=u(n,["components","mdxType","originalType","parentName"]),s=p(a),d=i,c=s["".concat(o,".").concat(d)]||s[d]||k[d]||r;return a?t.createElement(c,l(l({ref:e},m),{},{components:a})):t.createElement(c,l({ref:e},m))}));function c(n,e){var a=arguments,i=e&&e.mdxType;if("string"==typeof n||i){var r=a.length,l=new Array(r);l[0]=d;var u={};for(var o in e)hasOwnProperty.call(e,o)&&(u[o]=e[o]);u.originalType=n,u[s]="string"==typeof n?n:i,l[1]=u;for(var p=2;p<r;p++)l[p]=a[p];return t.createElement.apply(null,l)}return t.createElement.apply(null,a)}d.displayName="MDXCreateElement"},1597:(n,e,a)=>{a.r(e),a.d(e,{assets:()=>o,contentTitle:()=>l,default:()=>k,frontMatter:()=>r,metadata:()=>u,toc:()=>p});var t=a(7462),i=(a(7294),a(3905));const r={sidebar_position:56,title:"A.56. Python Enumeration",sidebar_label:"A.56. Enumeration"},l=void 0,u={unversionedId:"basic/enum",id:"basic/enum",title:"A.56. Python Enumeration",description:"Enumeration (Enum) adalah nilai konstan, umumnya disiapkan untuk merepresentasikan sekumpulan data konstan yang konteksnya masih sama. Misalnya, warna yang isinya bisa merah, biru, kuning, atau warna lain.",source:"@site/docs/basic/enum.md",sourceDirName:"basic",slug:"/basic/enum",permalink:"/basic/enum",draft:!1,tags:[],version:"current",sidebarPosition:56,frontMatter:{sidebar_position:56,title:"A.56. Python Enumeration",sidebar_label:"A.56. Enumeration"},sidebar:"tutorialSidebar",previous:{title:"A.55. Delete Object",permalink:"/basic/del"},next:{title:"A.57. Eval & Exec",permalink:"/basic/eval-exec"}},o={},p=[{value:"A.56.1. Enum / Enumeration",id:"a561-enum--enumeration",level:2},{value:"A.56.2. Naming convention enum",id:"a562-naming-convention-enum",level:2},{value:"A.56.3. Notasi penulisan pengaksesan enum property",id:"a563-notasi-penulisan-pengaksesan-enum-property",level:2},{value:"A.56.4. Nilai property enum",id:"a564-nilai-property-enum",level:2},{value:"\u25c9 <code>StrEnum</code>",id:"-strenum",level:3},{value:"\u25c9 <code>IntEnum</code> dan fungsi <code>auto()</code>",id:"-intenum-dan-fungsi-auto",level:3},{value:"A.56.5. Pengecekan nilai enum",id:"a565-pengecekan-nilai-enum",level:2},{value:"A.56.6. Perulangan enum",id:"a566-perulangan-enum",level:2},{value:"Catatan chapter \ud83d\udcd1",id:"catatan-chapter-",level:2},{value:"\u25c9 Source code praktik",id:"-source-code-praktik",level:3},{value:"\u25c9 Chapter relevan lainnya",id:"-chapter-relevan-lainnya",level:3},{value:"\u25c9 TBA",id:"-tba",level:3},{value:"\u25c9 Referensi",id:"-referensi",level:3}],m={toc:p},s="wrapper";function k(n){let{components:e,...a}=n;return(0,i.kt)(s,(0,t.Z)({},m,a,{components:e,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"Enumeration (Enum) adalah nilai konstan, umumnya disiapkan untuk merepresentasikan sekumpulan data konstan yang konteksnya masih sama. Misalnya, ",(0,i.kt)("strong",{parentName:"p"},"warna")," yang isinya bisa merah, biru, kuning, atau warna lain."),(0,i.kt)("p",null,"Pembuatan enum di Python sangat mudah. Caranya dengan mendeklarasikan class baru yang meng-",(0,i.kt)("em",{parentName:"p"},"inherit")," class ",(0,i.kt)("inlineCode",{parentName:"p"},"enum.Enum"),", kemudian menuliskan kumpulan data sebagai class property-nya."),(0,i.kt)("h2",{id:"a561-enum--enumeration"},"A.56.1. Enum / Enumeration"),(0,i.kt)("p",null,"Di bawah ini, disiapkan sebuah enum bernama ",(0,i.kt)("inlineCode",{parentName:"p"},"City")," dengan isi ada 4 buah pilihan kota."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-python"},"from enum import Enum\nclass City(Enum):\n    MALANG = 1\n    SURABAYA = 2\n    YOGYAKARTA = 3\n    JAKARTA = 4\n\nprint(list(City))\n# output \u279c [<City.MALANG: 1>, <City.SURABAYA: 2>, <City.YOGYAKARTA: 3>, <City.JAKARTA: 4>\n")),(0,i.kt)("p",null,"Nilai property enum bisa diisi dengan data apapun. Pada contoh di atas, nilai property enum ",(0,i.kt)("inlineCode",{parentName:"p"},"City")," diisi dengan angka numerik."),(0,i.kt)("blockquote",null,(0,i.kt)("p",{parentName:"blockquote"},"Property enum bisa diakses dalam bentuk ",(0,i.kt)("inlineCode",{parentName:"p"},"list")," dengan cukup membungkusnya menggunakan fungsi ",(0,i.kt)("inlineCode",{parentName:"p"},"list()"),".")),(0,i.kt)("p",null,"Selanjutnya, buat satu variabel, isi nilainya dengan salah satu property enum (misalnya ",(0,i.kt)("inlineCode",{parentName:"p"},"City.YOGYAKARTA"),"), kemudian print."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-python"},'city1 = City.YOGYAKARTA\n\nprint(city1)\n# output \u279c City.YOGYAKARTA\n\nprint(f"name {city1.name}")\n# output \u279c name YOGYAKARTA\n\nprint(f"value {city1.value}")\n# output \u279c value 3\n')),(0,i.kt)("p",null,"Nama enum property bisa diambil menggunakan property ",(0,i.kt)("inlineCode",{parentName:"p"},"name")," sedangkan value-nya diambil via property ",(0,i.kt)("inlineCode",{parentName:"p"},"value"),"."),(0,i.kt)("h2",{id:"a562-naming-convention-enum"},"A.56.2. Naming convention enum"),(0,i.kt)("p",null,"Sesuai penjelasan di ",(0,i.kt)("a",{parentName:"p",href:"https://docs.python.org/3/howto/enum.html"},"halaman dokumentasi Python"),", nama class enum dianjurkan ditulis menggunakan ",(0,i.kt)("strong",{parentName:"p"},"CamelCase"),", sedangkan nama class property dituliskan ",(0,i.kt)("strong",{parentName:"p"},"UPPERCASE"),". "),(0,i.kt)("h2",{id:"a563-notasi-penulisan-pengaksesan-enum-property"},"A.56.3. Notasi penulisan pengaksesan enum property"),(0,i.kt)("p",null,"Dalam penggunaannya setidaknya ada 3 notasi pengaksesan enum property yang bisa digunakan."),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Cara pertama menggunakan notasi ",(0,i.kt)("inlineCode",{parentName:"p"},"Enum.PROPERTY"),"."),(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre",className:"language-python"},'city1 = City.YOGYAKARTA\n\nprint(city1)\n# output \u279c City.YOGYAKARTA\nprint(f"name {city1.name}")\n# output \u279c name YOGYAKARTA\nprint(f"value {city1.value}")\n# output \u279c value 3\n'))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Cara ke-2 menggunakan notasi pengaksesan dictionary dengan key berupa string."),(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre",className:"language-python"},'city2 = City["SURABAYA"]\nprint(city2)\n# output \u279c City.SURABAYA\nprint(f"name {city2.name}")\n# output \u279c name SURABAYA\nprint(f"value {city2.value}")\n# output \u279c value 2\n')),(0,i.kt)("p",{parentName:"li"},"  Metode ini cukup berguna pada case ketika key enum yang perlu diambil yang sudah diketahui nilainya.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Cara ke-3 menggunakan notasi pengaksesan ",(0,i.kt)("inlineCode",{parentName:"p"},"Enum(value)"),"."),(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre",className:"language-python"},'city3 = City(4)\nprint(city3)\n# output \u279c City.JAKARTA\nprint(f"name {city3.name}")\n# output \u279c name JAKARTA\nprint(f"value {city3.value}")\n# output \u279c value 4\n')),(0,i.kt)("p",{parentName:"li"},"  Metode ini pas digunakan ketika value enum sudah diketahui nilainya."))),(0,i.kt)("h2",{id:"a564-nilai-property-enum"},"A.56.4. Nilai property enum"),(0,i.kt)("p",null,"Property enum nilainya bisa berisi data numerik, string, atau tipe data lainnya."),(0,i.kt)("p",null,"Di atas telah dicontohkan enum ",(0,i.kt)("inlineCode",{parentName:"p"},"City")," yang property-nya berisi data numerik. Pada contoh ke-2 ini, enum ",(0,i.kt)("inlineCode",{parentName:"p"},"Color")," property-nya berisi data string."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-python"},'from enum import Enum\nclass Color(Enum):\n    RED = "red"\n    BLUE = "blue"\n\nprint(list(Color))\n# output \u279c [<Color.RED: \'red\'>, <Color.BLUE: \'blue\'>]\n\ncolor1 = Color("red")\ncolor2 = Color.RED\ncolor3 = Color["BLUE"]\nprint(color1, color2, color3)\n# output \u279c Color.RED Color.RED Color.BLUE\n')),(0,i.kt)("p",null,"Selain menggunakan class ",(0,i.kt)("inlineCode",{parentName:"p"},"enum.Enum")," saat deklarasi, bisa juga menggunakan salah satu class turunan enum lainnya, diantaranya ada:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Class ",(0,i.kt)("inlineCode",{parentName:"li"},"enum.Enum")," \u27a1\ufe0f property boleh berisi data bertipe apapun"),(0,i.kt)("li",{parentName:"ul"},"Class ",(0,i.kt)("inlineCode",{parentName:"li"},"enum.StrEnum")," \u27a1\ufe0f property hanya boleh berisi tipe data string"),(0,i.kt)("li",{parentName:"ul"},"Class ",(0,i.kt)("inlineCode",{parentName:"li"},"enum.IntEnum")," \u27a1\ufe0f property hanya boleh berisi tipe data integer")),(0,i.kt)("p",null,"Cara penerapan variant enum yang telah disebut di atas adalah masih sama. Cukup ganti ",(0,i.kt)("inlineCode",{parentName:"p"},"Enum")," dengan turunan class yang diinginkan, lalu sesuaikan tipe data nilai property di dalamnya."),(0,i.kt)("h3",{id:"-strenum"},"\u25c9 ",(0,i.kt)("inlineCode",{parentName:"h3"},"StrEnum")),(0,i.kt)("p",null,"Misalnya, enum ",(0,i.kt)("inlineCode",{parentName:"p"},"Color")," kita ubah dari menggunakan ",(0,i.kt)("inlineCode",{parentName:"p"},"Enum")," ke ",(0,i.kt)("inlineCode",{parentName:"p"},"StrEnum"),", maka kodenya seperti ini:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-python"},'from enum import StrEnum\nclass Color(StrEnum):\n    RED = "red"\n    BLUE = "blue"\n\nprint(list(Color))\n# output \u279c [<Color.RED: \'red\'>, <Color.BLUE: \'blue\'>]\n\ncolor1 = Color("red")\ncolor2 = Color.RED\ncolor3 = Color["BLUE"]\nprint(color1, color2, color3)\n# output \u279c Color.RED Color.RED Color.BLUE\n')),(0,i.kt)("h3",{id:"-intenum-dan-fungsi-auto"},"\u25c9 ",(0,i.kt)("inlineCode",{parentName:"h3"},"IntEnum")," dan fungsi ",(0,i.kt)("inlineCode",{parentName:"h3"},"auto()")),(0,i.kt)("p",null,"Untuk enum dengan property bertipe numerik, bisa menggunakan fungsi ",(0,i.kt)("inlineCode",{parentName:"p"},"auto()")," untuk generate nilai numerik unik secara otomatis. Contoh:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-python"},"from enum import IntEnum, auto\nclass Size(IntEnum):\n    S = auto()\n    M = auto()\n    L = auto()\n    XL = auto()\n\nprint(list(Size))\n# output \u279c [<Size.S: 1>, <Size.M: 2>, <Size.L: 3>, <Size.XL: 4>]\n\nsize1 = Size.M\nsize2 = Size.XL\nprint(size1, size2)\n# output \u279c Size.M Size.XL\n")),(0,i.kt)("h2",{id:"a565-pengecekan-nilai-enum"},"A.56.5. Pengecekan nilai enum"),(0,i.kt)("p",null,"Operator identitas ",(0,i.kt)("inlineCode",{parentName:"p"},"is")," dan operator perbandingan ",(0,i.kt)("inlineCode",{parentName:"p"},"==")," dan ",(0,i.kt)("inlineCode",{parentName:"p"},"!=")," bisa digunakan untuk pengecekan nilai enum."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-python"},'from enum import Enum\nclass City(Enum):\n    MALANG = 1\n    SURABAYA = 2\n    YOGYAKARTA = 3\n    JAKARTA = 4\n\ndef say_anything(c):\n    if c is City.MALANG:\n        print("Oyi sam")\n    elif c == City.JAKARTA:\n        print("lo gue lo gue")\n    elif c == City.SURABAYA:\n        print("coeg")\n    elif c == City.YOGYAKARTA:\n        print("monggo")\n\ncity1 = City.YOGYAKARTA\nsay_anything(city1)\n# output \u279c monggo\n')),(0,i.kt)("h2",{id:"a566-perulangan-enum"},"A.56.6. Perulangan enum"),(0,i.kt)("p",null,"Enum merupakan tipe yang bisa langsung digunakan pada perulangan. Contoh penggunaannya:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-python"},"for c in City:\n    print(c, c.name, c.value)\n# output \u2193\n#\n# City.MALANG MALANG 1\n# City.SURABAYA SURABAYA 2\n# City.YOGYAKARTA YOGYAKARTA 3\n# City.JAKARTA JAKARTA 4\n")),(0,i.kt)("hr",null),(0,i.kt)("div",{class:"section-footnote"},(0,i.kt)("h2",{id:"catatan-chapter-"},"Catatan chapter \ud83d\udcd1"),(0,i.kt)("h3",{id:"-source-code-praktik"},"\u25c9 Source code praktik"),(0,i.kt)("pre",null,(0,i.kt)("a",{href:"https://github.com/novalagung/dasarpemrogramanpython-example/tree/master/enum"},"github.com/novalagung/dasarpemrogramanpython-example/../enum")),(0,i.kt)("h3",{id:"-chapter-relevan-lainnya"},"\u25c9 Chapter relevan lainnya"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/basic/konstanta"},"Konstanta"))),(0,i.kt)("h3",{id:"-tba"},"\u25c9 TBA"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"IntFlag")," and ",(0,i.kt)("inlineCode",{parentName:"li"},"Flag")," ",(0,i.kt)("a",{parentName:"li",href:"https://docs.python.org/3/howto/enum.html#intflag"},"https://docs.python.org/3/howto/enum.html#intflag"))),(0,i.kt)("h3",{id:"-referensi"},"\u25c9 Referensi"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://docs.python.org/3/library/enum.html"},"https://docs.python.org/3/library/enum.html")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://docs.python.org/3/howto/enum.html"},"https://docs.python.org/3/howto/enum.html")))))}k.isMDXComponent=!0}}]);